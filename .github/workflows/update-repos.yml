name: Atualizar Reposit√≥rios Recentes

on:
  schedule:
    - cron: '0 0 * * *'  # Executa diariamente √† meia-noite
  workflow_dispatch:      # Permite execu√ß√£o manual

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout do Reposit√≥rio
        uses: actions/checkout@v4

      - name: Buscar Reposit√≥rios Recentes
        id: fetch-repos
        run: |
          RESPONSE=$(curl -s "https://api.github.com/users/luanmuzy/repos?sort=updated&per_page=15&type=all" | jq -r '.[] | select(.fork == false and .name != "luanmuzy") | "- [\(.name)](\(.html_url))"')
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          echo "$RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Verificar se h√° reposit√≥rios
        run: |
          echo "Reposit√≥rios encontrados:"
          echo "${{ steps.fetch-repos.outputs.repos }}"

      - name: Verificar README existente
        run: |
          if grep -q "## üöÄ Projetos Recentes" README.md; then
            echo "Se√ß√£o existente encontrada, ser√° atualizada"
          else
            echo "Se√ß√£o n√£o encontrada, ser√° criada"
            echo -e "\n## üöÄ Projetos Recentes\n\n<!-- PROJECTS_START -->\n<!-- PROJECTS_END -->" >> README.md
          fi

      - name: Atualizar README
        run: |
          # Garantir que a substitui√ß√£o funcione mesmo com quebras de linha
          REPOS="${{ steps.fetch-repos.outputs.repos }}"
          # Usando awk para maior confiabilidade na substitui√ß√£o de padr√µes multilinhas
          awk -v repos="$REPOS" '
          /<!-- PROJECTS_START -->/{
            print;
            print repos;
            found=1;
            next;
          }
          /<!-- PROJECTS_END -->/{ 
            if (found) found=0; 
            print;
            next;
          }
          found {next}
          {print}
          ' README.md > README.md.new
          mv README.md.new README.md

      - name: Verificar altera√ß√µes
        id: check_changes
        run: |
          if git status --porcelain | grep "README.md"; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Altera√ß√µes detectadas no README.md"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "Nenhuma altera√ß√£o no README.md"
          fi

      - name: Commit e Push
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name "Lu√£ Muzy"
          git config --global user.email "luan.b.muzy@gmail.com"
          git add README.md
          git commit -m "üîÑ Atualiza√ß√£o autom√°tica de reposit√≥rios"
          git push
